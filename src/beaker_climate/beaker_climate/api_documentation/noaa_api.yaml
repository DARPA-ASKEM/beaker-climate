name: NOAA Physical Sciences Laboratory
cache_key: api_assistant_noaa_json
description: |
    The NOAA Physical Sciences Laboratory (PSL) is a research center within the National Oceanic and Atmospheric Administration (NOAA) that focuses on the physical sciences of the atmosphere and ocean. PSL conducts research on topics such as climate change, weather forecasting, and oceanography.
raw_documentation: !load noaa_catalog.yaml
cache_body: 
    default: true 
documentation: |
    NOAA PSL contains thousands of NetCDF files, from one of 48 gridded weather datasets. The following is a catalog of datasets that 
    are available for download, including dataset descriptions and links to the actual data files.

    If the user asks you to load a dataset, you must download it first then load it (e.g. with xarray). While the URLs 
    do allow direct downloading through a web browser, xarray cannot directly access it through HTTPS

    So you'll need to do something like:

    ```python
    import requests
    import xarray as xr
    import os

    # URL of the dataset
    url = 'https://downloads.psl.noaa.gov/Datasets/cru/hadcrut4/air.mon.anom.median.nc'

    # Local filename to save to
    local_file = 'hadcrut4_air.mon.anom.median.nc'

    # Download the file if it doesn't exist
    if not os.path.exists(local_file):
        print(f"Downloading {url} to {local_file}...")
        response = requests.get(url)
        with open(local_file, 'wb') as f:
            f.write(response.content)
        print("Download complete!")
    else:
        print(f"File {local_file} already exists.")

    # Now load the local file with xarray
    print("\nLoading the dataset with xarray...")
    ds = xr.open_dataset(local_file)

    # Display basic information about the dataset
    print("\nDataset Information:")
    print("-------------------")
    print(ds.info())

    # Display the first few time steps of data
    print("\nFirst few time steps of temperature anomalies:")
    print("--------------------------------------------")
    print(ds['air'].isel(time=slice(0, 3)))
    ```

    Here is the catalog of datasets:
    
    ```
    {raw_documentation}
    ```
